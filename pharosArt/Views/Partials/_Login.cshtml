@inherits Umbraco.Web.Mvc.UmbracoViewPage<pharosArt.Models.LoginModel>
@using Umbraco.Web

<div id="fb-root"></div>
<div class="login-container row">
    <div class="col-md-4">
        @using (Html.BeginUmbracoForm("SubmitLogin", "Login", System.Web.Mvc.FormMethod.Post, new { id = "login" }))
        {
            @Html.AntiForgeryToken()
            @Html.LabelFor(m => m.Username)
            @Html.TextBoxFor(m => m.Username, new { placeholder = "Username", @style = "width:90%" })

            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { placeholder = "Password", @style = "width:90%" })

            @*Html.ValidationSummary()*@
            <button name="login" type="submit">Login</button>
        }
    </div>
</div>
<div class="fb-login-button" autologoutlink="false" scope="email">Login with Facebook</div>
<span id="loading"></span> @*//replace with fancy radiating Logging in, please wait*@

<div class="row"><h2>Google + Login / Sign in</h2><br /><button class="btn btn-danger" id="googleplus">Google + API</button><br /></div> 

<script>
    $("document").ready(function () {
        // Initialize the SDK upon load
        FB.init({
            appId: '620901621386387', // App ID
            channelUrl: '//' + window.location.hostname + '/channel', // Path to your
            // Channel File
            scope: 'id,name,email', // This to get the user details back
            // from Facebook
            status: false, // check login status
            cookie: true, // enable cookies to allow the server to access the session
            xfbml: true // parse XFBML
        });
        // listen for and handle auth.statusChange events

        FB.Event.subscribe('auth.statusChange', OnLogin);
    });

    // This method will be called after the user login into facebook.
    function OnLogin(response) {
        if (response.authResponse) {
            $("#loading").html("Loading...");
            var data = { accessToken: response.authResponse.accessToken };
            $.ajax({
                type: 'POST',
                url: '@Url.Action("LogUserIn", "FacebookLogin")',
                data: JSON.stringify(data),
                contentType: "application/json; charset=utf-8",
            }).done(function (response) {
                //alert("Success");
            }).fail(function (jqXHR, textStatus, errorThrown) {
                $("#loading").htmlFor(errorThrown);
                alert(errorThrown);
            });
        }
    }

    //google plus login/signup
    var googleUser = {};
    var startAppA = function() {
        gapi.load('auth2', function() {
            //Retrieve the singleton for the GoogleAuth library and set up the client.
            auth2 = gapi.auth2.init({
                client_id: '141486034349-mjv6j5d1161r8k8m5jdp3i89oe95dams.apps.googleusercontent.com',
                secret_key: 'Q7cGP-e63fPoG3SR0FjiQoRk',
                cookiepolicy: 'single_host_origin',
            });
            attachSignin(document.getElementById('googleplus'));
        });
    };

    function attachSignin(element) {
        auth2.attachClickHandler(element, {}, function(googleUser) {
            debugger;
            $(".se-pre-con").show();
            console.log(googleUser);
            var profiles = googleUser.getBasicProfile();
            var ReturnUrl = 'http://localhost:62153/';
            //Crate A Bunch Of Object for Search
            var objData = {
                Email: profiles.getEmail(),
                LastName: profiles.getFamilyName(),
                FirstName: profiles.getGivenName(),
                GoogleID: profiles.getId(),
                ProfileURL: profiles.getName(),
            };
            $.ajax({
                type: "POST",
                url: '@Url.Action("LogUserIn", "GooglePlusLogin")',
                data: objData,
                datatype: "json",
                success: function(data) {
                    alert("Successfully Done");
                }
            });
            $(".se-pre-con").hide();
        }, function(error) {
            alert(JSON.stringify(error, '#ff0000', 2));
        });
    }
</script>

