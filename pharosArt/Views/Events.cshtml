@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.Events>
@using ContentModels = Umbraco.Web.PublishedContentModels;
@{
    Layout = "Master.cshtml";
    int pageSize; // How many items per page
    int page; // The page we are viewing



    var root = Umbraco.TypedContentAtRoot().First();
    if (Int32.Parse(root.GetPropertyValue<string>("pagesNumber")) > 0)
    {
        pageSize = Int32.Parse(root.GetPropertyValue<string>("pagesNumber"));
    }
    else
    {
        pageSize = 10;
    }

    var nodes = CurrentPage.children.OrderBy("CreateDate desc");

    int totalNodes = nodes.Count();
    int totalPages = (int)Math.Ceiling((double)totalNodes / (double)pageSize);

    if (Request.QueryString["page"] == null)
    {
        page = 1;
    }
    else
    {
        page = Int32.Parse(Request.QueryString["page"]);
    }

    if (page > totalPages)
    {
        page = totalPages;
    }
    else if (page < 1)
    {
        page = 1;
    }
}

@Html.Action("ShowPages", "Pagination", new { _totalPages = totalPages, _currentPage = page })
<div class="row blog-grid">
    @foreach (var post in nodes.Skip((page - 1) * pageSize).Take(pageSize))
    {
        var item = new EventPage(post);
        
        <div class="col-sm-6">
            <a href="@item.Url">
                @if (item.Image != null)
                {
                    <div class="post-image" style="background-image: url(@item.Image.GetCropUrl("EventBlogThumbnail"))">
                    </div>
                }
            </a>
            <div class="post-content">
                <div class="post-date">
                    @item.EventTime.ToString("dddd, MMMM dd, yyyy")
                </div>
                <div class="post-title">
                    <a href="@item.Url">
                        <h2>
                            @((item.HasValue("title") ? item.Title : item.Name))
                        </h2>
                    </a>
                </div>
            </div>
        </div>
    }
</div>
@Html.Action("ShowPages", "Pagination", new { _totalPages = totalPages, _currentPage = page })